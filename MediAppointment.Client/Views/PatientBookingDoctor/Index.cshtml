@model List<MediAppointment.Client.Models.Appointment.BookingDoctorView>
@{
    ViewData["Title"] = "Lịch hẹn với bác sĩ";
}

<style>
    .appointment-card {
        border: none;
        border-radius: 15px;
        transition: all 0.3s ease;
        overflow: hidden;
        background: linear-gradient(135deg, #ffffff 0%, #f8f9ff 100%);
    }

        .appointment-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0,0,0,0.1) !important;
        }

    .card-header-custom {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        border-radius: 15px 15px 0 0 !important;
        padding: 1.25rem;
        border: none;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .status-scheduled {
        background-color: #28a745;
        color: white;
    }

    .status-pending {
        background-color: #ffc107;
        color: #212529;
    }

    .status-cancelled {
        background-color: #dc3545;
        color: white;
    }

    .info-item {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
        padding: 0.5rem;
        background-color: #f8f9fa;
        border-radius: 8px;
        border-left: 4px solid #667eea;
    }

    .info-icon {
        color: #667eea;
        width: 20px;
        margin-right: 10px;
    }

    .btn-action {
        border-radius: 20px;
        padding: 0.5rem 1.25rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-action:hover {
            transform: translateY(-2px);
        }

    .page-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 2rem;
        border-radius: 15px;
        margin-bottom: 2rem;
        box-shadow: 0 5px 15px rgba(102, 126, 234, 0.3);
    }

    .filter-section {
        background: white;
        padding: 1.5rem;
        border-radius: 10px;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
        margin-bottom: 2rem;
    }

    .empty-state {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        border-radius: 20px;
        padding: 3rem;
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .main-container {
        padding-left: 2rem;
        padding-right: 2rem;
        max-width: 1400px;
        margin: 0 auto;
    }

    @@media (max-width: 768px) {
        .main-container {
            padding-left: 1rem;
            padding-right: 1rem;
        }
    }

    @@media (max-width: 576px) {
        .main-container {
            padding-left: 0.5rem;
            padding-right: 0.5rem;
        }
    }
</style>

<div class="main-container">
    <div class="page-header mt-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h1 class="mb-1"><i class="fas fa-user-md me-3"></i>Lịch hẹn với bác sĩ</h1>
                <p class="mb-0 opacity-75">Theo dõi và quản lý các lịch hẹn với bác sĩ</p>
            </div>
            <a asp-controller="BookingDoctor" asp-action="Index" class="btn btn-light btn-lg">
                <i class="fas fa-plus me-2"></i>Đặt lịch bác sĩ
            </a>
        </div>
    </div>

    @if (Model != null && Model.Any())
    {
        <!-- Filter Section -->
        <div class="filter-section">
            <div class="row align-items-center">
                <div class="col-md-4">
                    <label class="form-label fw-bold">Lọc theo trạng thái:</label>
                    <select class="form-select" id="statusFilter">
                        <option value="">Tất cả trạng thái</option>
                        <option value="Approved">Đã chấp nhận</option>
                        <option value="Pending">Đang chờ</option>
                        <option value="Rejected">Bị từ chối</option>
                        <option value="Canceled">Đã hủy</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label fw-bold">Sắp xếp theo:</label>
                    <select class="form-select" id="sortFilter">
                        <option value="date-desc">Ngày mới nhất</option>
                        <option value="date-asc">Ngày cũ nhất</option>
                        <option value="status">Trạng thái</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <label class="form-label fw-bold">Tìm kiếm:</label>
                    <input type="text" class="form-control" id="searchFilter" placeholder="Tìm theo tên bác sĩ, khoa...">
                </div>
            </div>
        </div>

        <div class="row" id="appointmentsContainer">
            @foreach (var appointment in Model)
            {
                var statusDisplay = appointment.Status switch
                {
                    "Approved" => "Đã chấp nhận",
                    "Pending" => "Đang chờ",
                    "Rejected" => "Bị từ chối",
                    "Canceled" => "Đã hủy",
                    _ => "Không rõ"
                };

                var statusBadgeClass = appointment.Status switch
                {
                    "Approved" => "status-badge status-scheduled",
                    "Pending" => "status-badge status-pending",
                    "Rejected" => "status-badge status-cancelled",
                    "Canceled" => "status-badge status-cancelled",
                    _ => "status-badge"
                };

                <div class="col-md-6 col-lg-4 mb-4 appointment-item"
                     data-status="@appointment.Status"
                     data-doctor="@appointment.DoctorName"
                     data-department="@appointment.DepartmentName"
                     data-date="@appointment.AppointmentDate.ToString("yyyy-MM-dd")">
                    <div class="card appointment-card h-100">
                        <div class="card-header card-header-custom">
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="appointment-date">
                                    <i class="fas fa-calendar me-2"></i>
                                    @appointment.AppointmentDate.ToString("dd/MM/yyyy") • (@appointment.TimeRange)
                                </div>
                                <span class="@statusBadgeClass">@statusDisplay</span>
                            </div>
                        </div>
                        <div class="card-body p-4">
                            <div class="info-item">
                                <i class="fas fa-user-md info-icon"></i>
                                <div><strong>Bác sĩ:</strong> @appointment.DoctorName</div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-building info-icon"></i>
                                <div><strong>Khoa:</strong> @appointment.DepartmentName</div>
                            </div>
                            <div class="info-item">
                                <i class="fas fa-clock info-icon"></i>
                                <div><strong>Ngày tạo:</strong> @appointment.CreatedAt.ToString("dd/MM/yyyy - HH:mm")H</div>
                            </div>

                            @if (!string.IsNullOrEmpty(appointment.Note))
                            {
                                <div class="note-section mt-3">
                                    <div class="d-flex align-items-start">
                                        <i class="fas fa-sticky-note text-warning me-2 mt-1"></i>
                                        <div>
                                            <strong>Ghi chú:</strong>
                                            <p class="mb-0 mt-1">@appointment.Note</p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div class="card-footer bg-transparent border-0 p-4 pt-0">
                            <div class="d-flex justify-content-between gap-2">
                                <a href="#" class="btn btn-outline-secondary btn-action flex-fill" disabled title="Chức năng đang phát triển">
                                    <i class="fas fa-eye me-1"></i>Chi tiết
                                </a>
                                @if (appointment.Status == "Pending")
                                {
                                    <form asp-action="Cancel" asp-route-id="@appointment.Id" method="post" class="flex-fill"
                                          onsubmit="return confirm('Bạn có chắc chắn muốn hủy lịch hẹn này?')">
                                        <button type="submit" class="btn btn-outline-danger btn-action w-100">
                                            <i class="fas fa-times me-1"></i>Hủy
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="empty-state text-center">
            <div class="mb-4">
                <i class="fas fa-calendar-times text-primary" style="font-size: 5rem; opacity: 0.7;"></i>
            </div>
            <h3 class="text-primary mb-3">Bạn chưa có lịch hẹn nào</h3>
            <p class="text-muted mb-4 lead">
                Hãy đặt lịch hẹn đầu tiên của bạn để bắt đầu chăm sóc sức khỏe!
            </p>
            <div class="d-flex flex-column flex-md-row gap-3 justify-content-center">
                <a asp-controller="BookingDoctor" asp-action="Index" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus me-2"></i>Đặt lịch ngay
                </a>
                <a href="#" class="btn btn-outline-secondary btn-lg">
                    <i class="fas fa-info-circle me-2"></i>Tìm hiểu thêm
                </a>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const statusFilter = document.getElementById('statusFilter');
            const sortFilter = document.getElementById('sortFilter');
            const searchFilter = document.getElementById('searchFilter');
            const appointmentsContainer = document.getElementById('appointmentsContainer');
            const appointmentItems = document.querySelectorAll('.appointment-item');

            function filterAndSort() {
                const statusVal = statusFilter?.value.toLowerCase() || '';
                const searchVal = searchFilter?.value.toLowerCase() || '';
                const sortVal = sortFilter?.value || 'date-desc';

                let visibleAppointments = [];

                appointmentItems.forEach(item => {
                    const status = item.dataset.status?.toLowerCase() || '';
                    const doctor = item.dataset.doctor?.toLowerCase() || '';
                    const department = item.dataset.department?.toLowerCase() || '';

                    const statusMatch = !statusVal || status === statusVal;
                    const searchMatch = !searchVal || doctor.includes(searchVal) || department.includes(searchVal);

                    if (statusMatch && searchMatch) {
                        item.style.display = 'block';
                        visibleAppointments.push(item);
                    } else {
                        item.style.display = 'none';
                    }
                });

                visibleAppointments.sort((a, b) => {
                    switch (sortVal) {
                        case 'date-asc':
                            return new Date(a.dataset.date) - new Date(b.dataset.date);
                        case 'date-desc':
                            return new Date(b.dataset.date) - new Date(a.dataset.date);
                        case 'status':
                            return a.dataset.status.localeCompare(b.dataset.status);
                        default:
                            return 0;
                    }
                });

                visibleAppointments.forEach(item => appointmentsContainer.appendChild(item));
            }

            if (statusFilter) statusFilter.addEventListener('change', filterAndSort);
            if (sortFilter) sortFilter.addEventListener('change', filterAndSort);
            if (searchFilter) searchFilter.addEventListener('input', filterAndSort);
        });
    </script>
}
