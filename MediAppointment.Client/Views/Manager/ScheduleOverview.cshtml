@model MediAppointment.Client.Models.Manager.ManagerScheduleOverviewViewModel
@{
    ViewData["Title"] = "Tổng quan lịch làm việc";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
    
    var weekDates = new List<DateTime>();
    if (Model.Year > 0 && Model.Week > 0)
    {
        var jan1 = new DateTime(Model.Year, 1, 1);
        var daysOffset = (int)DayOfWeek.Monday - (int)jan1.DayOfWeek;
        var firstMonday = jan1.AddDays(daysOffset);
        var startOfWeek = firstMonday.AddDays((Model.Week - 1) * 7);
        weekDates = Enumerable.Range(0, 7).Select(i => startOfWeek.AddDays(i)).ToList();
    }
}

<div class="card">
    <div class="card-body">
        <!-- Alert Messages -->
        <div id="alertContainer"></div>

        <!-- Filters -->
        <form id="filterForm" method="get">
            @Html.AntiForgeryToken()
            <div class="row mb-4">
                <div class="col-md-2">
                    <label class="form-label">Khoa</label>
                    <select name="departmentId" id="departmentSelect" class="form-select">
                        <option value="">-- Tất cả khoa --</option>
                        @foreach (var dept in Model.Departments)
                        {
                            <option value="@dept.Id" selected="@(Model.DepartmentId == dept.Id ? "selected" : null)">
                                @dept.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Phòng</label>
                    <select name="roomId" id="roomSelect" class="form-select">
                        <option value="">-- Tất cả phòng --</option>
                        @foreach (var room in Model.Rooms)
                        {
                            <option value="@room.Id" 
                                    data-department="@room.DepartmentId"
                                    selected="@(Model.RoomId == room.Id ? "selected" : null)">
                                @room.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Bác sĩ</label>
                    <select name="doctorId" id="doctorSelect" class="form-select">
                        <option value="">-- Tất cả bác sĩ --</option>
                        @foreach (var doctor in Model.Doctors)
                        {
                            <option value="@doctor.Id" 
                                    data-department="@doctor.DepartmentId"
                                    selected="@(Model.DoctorId == doctor.Id ? "selected" : null)">
                                @doctor.Name
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Năm</label>
                    <select name="year" id="yearSelect" class="form-select">
                        @foreach (var year in Model.AvailableYears)
                        {
                            <option value="@year" selected="@(Model.Year == year ? "selected" : null)">
                                @year
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">Tuần</label>
                    <select name="week" id="weekSelect" class="form-select">
                        @foreach (var week in Model.AvailableWeeks)
                        {
                            <option value="@week" selected="@(Model.Week == week ? "selected" : null)">
                                Tuần @week
                            </option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <div class="d-flex gap-2 align-items-end" style="height: 38px;">
                        <button type="submit" class="btn btn-outline-success h-100 flex-fill">
                            <i class="bi bi-search"></i> Tìm kiếm
                        </button>
                        <button type="button" class="btn btn-outline-info h-100 flex-fill" id="quickWeekBtn">
                            <i class="bi bi-calendar-week"></i> Tuần này
                        </button>
                    </div>
                </div>
            </div>

            @if (weekDates.Any())
            {
                <!-- Quick Actions -->
                <div class="row mb-3">
                    <div class="col-12">
                        <div class="d-flex gap-2 mb-2">
                            <button type="button" class="btn btn-sm btn-outline-success" onclick="exportSchedule('excel')">
                                <i class="bi bi-file-excel"></i> Xuất Excel
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-danger" onclick="exportSchedule('pdf')">
                                <i class="bi bi-file-pdf"></i> Xuất PDF
                            </button>
                        </div>
                    </div>
                </div>
            }
        </form>

        <!-- Schedule Grid -->
        @if (weekDates.Any())
        {
            <div class="row mb-3">
                <div class="col-12">
                    <h5 class="text-success">
                        <i class="bi bi-calendar-week"></i> 
                        Tuần @Model.Week, năm @Model.Year 
                        (@weekDates.First().ToString("dd/MM") - @weekDates.Last().ToString("dd/MM"))
                    </h5>
                </div>
            </div>

            <div class="table-responsive">
                <table class="table table-bordered table-hover">
                    <thead class="bg-light">
                        <tr>
                            <th width="15%" class="text-center">Ca làm việc</th>
                            @foreach (var date in weekDates)
                            {
                                <th width="12%" class="text-center">
                                    <div>@date.ToString("ddd", new System.Globalization.CultureInfo("vi-VN"))</div>
                                    <small class="text-muted">@date.ToString("dd/MM")</small>
                                </th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Morning shift -->
                        <tr>
                            <td class="fw-bold bg-light text-center">
                                <div>Ca sáng</div>
                                <small class="text-muted">07:00 - 11:00</small>
                            </td>
                            @foreach (var date in weekDates)
                            {
                                <td class="text-center">
                                    @{
                                        var morningSlots = Model.WeeklySchedule.TryGetValue(date.Date, out var slotsMorning) 
                                            ? slotsMorning.Where(s => s.Period == "morning").ToList() 
                                            : new List<MediAppointment.Client.Models.Manager.ManagerScheduleSlot>();
                                    }
                                    
                                    <div class="schedule-cell" data-date="@date.ToString("yyyy-MM-dd")" data-period="morning">
                                        @if (morningSlots.Any())
                                        {
                                            <div class="registered-slots">
                                                @foreach (var slot in morningSlots)
                                                {
                                                    <div class="slot-info mb-2">
                                                        <div class="fw-bold text-success">@slot.DoctorName</div>
                                                        <small class="text-muted">@slot.RoomName</small>
                                                        <div class="mt-1">
                                                            <span class="badge bg-@(slot.IsFullyBooked ? "danger" : "success")">
                                                                @slot.AppointmentCount/@slot.MaxAppointments
                                                            </span>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="empty-slot">
                                                <div class="text-center">
                                                    <i class="bi bi-calendar-x text-muted" style="font-size: 1.5rem;"></i>
                                                    <div class="text-muted small">Chưa có ca</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </td>
                            }
                        </tr>
                        
                        <!-- Afternoon shift -->
                        <tr>
                            <td class="fw-bold bg-light text-center">
                                <div>Ca chiều</div>
                                <small class="text-muted">13:00 - 17:00</small>
                            </td>
                            @foreach (var date in weekDates)
                            {
                                <td class="text-center">
                                    @{
                                        var afternoonSlots = Model.WeeklySchedule.TryGetValue(date.Date, out var slotsAfternoon) 
                                            ? slotsAfternoon.Where(s => s.Period == "afternoon").ToList() 
                                            : new List<MediAppointment.Client.Models.Manager.ManagerScheduleSlot>();
                                    }
                                    
                                    <div class="schedule-cell" data-date="@date.ToString("yyyy-MM-dd")" data-period="afternoon">
                                        @if (afternoonSlots.Any())
                                        {
                                            <div class="registered-slots">
                                                @foreach (var slot in afternoonSlots)
                                                {
                                                    <div class="slot-info mb-2">
                                                        <div class="fw-bold text-success">@slot.DoctorName</div>
                                                        <small class="text-muted">@slot.RoomName</small>
                                                        <div class="mt-1">
                                                            <span class="badge bg-@(slot.IsFullyBooked ? "danger" : "success")">
                                                                @slot.AppointmentCount/@slot.MaxAppointments
                                                            </span>
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="empty-slot">
                                                <div class="text-center">
                                                    <i class="bi bi-calendar-x text-muted" style="font-size: 1.5rem;"></i>
                                                    <div class="text-muted small">Chưa có ca</div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </td>
                            }
                        </tr>
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> 
                Vui lòng chọn năm và tuần để xem lịch làm việc.
            </div>
        }
    </div>
</div>

@section Styles {
    <style>
        /* Form control height matching */
        .form-select, .btn {
            height: 38px !important;
            line-height: 1.5;
        }

        .btn {
            display: flex;
            align-items: center;
            justify-content: center;
            white-space: nowrap;
            min-width: 0;
        }

        .btn i {
            margin-right: 4px;
        }

        /* Responsive adjustments */
        @@media (max-width: 991px) {
            .col-md-2 {
                margin-bottom: 1rem;
            }
            
            .d-flex.gap-2 {
                flex-direction: column;
                gap: 0.5rem !important;
            }
            
            .d-flex.gap-2 button {
                width: 100%;
            }
        }

        @@media (max-width: 768px) {
            .btn {
                font-size: 0.875rem;
                padding: 0.375rem 0.75rem;
            }
            
            .btn i {
                font-size: 0.875rem;
            }
        }

        .schedule-cell {
            min-height: 80px;
            padding: 10px;
            border-radius: 4px;
            transition: all 0.3s ease;
        }

        .schedule-cell:hover {
            background-color: #f8f9fa;
        }

        .registered-slots {
            background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
            padding: 15px;
            border-radius: 8px;
            border: 2px solid #198754;
            box-shadow: 0 2px 4px rgba(25, 135, 84, 0.1);
            position: relative;
            min-height: 100px;
        }

        .slot-info {
            text-align: center;
            padding: 5px;
            background: rgba(255, 255, 255, 0.8);
            border-radius: 4px;
            margin-bottom: 5px;
        }

        .empty-slot {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            padding: 15px;
            border-radius: 8px;
            border: 2px dashed #6c757d;
            text-align: center;
            min-height: 100px;
            display: flex;
            flex-direction: column;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .empty-slot:hover {
            background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);
            border-color: #2196f3;
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 4px 6px -1px rgba(0,0,0,0.1), 0 2px 4px -1px rgba(0,0,0,0.06);
        }

        .btn {
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.15);
        }

        .table {
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .table th {
            border-top: none;
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.875rem;
            letter-spacing: 0.5px;
        }

        .table td {
            vertical-align: middle;
            border-color: #e9ecef;
        }

        .alert {
            border-radius: 8px;
            border: none;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .form-select, .form-control {
            border-radius: 8px;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
        }

        .form-select:focus, .form-control:focus {
            border-color: #198754;
            box-shadow: 0 0 0 0.2rem rgba(25, 135, 84, 0.25);
            transform: scale(1.02);
        }

        .badge {
            border-radius: 6px;
            font-weight: 500;
        }

        /* Responsive improvements */
        @@media (max-width: 768px) {
            .schedule-cell {
                min-height: 60px;
                padding: 6px;
            }
            
            .btn-sm {
                font-size: 0.75rem;
                padding: 0.25rem 0.5rem;
            }
            
            .table {
                font-size: 0.875rem;
            }
            
            .form-select, .form-control {
                font-size: 0.875rem;
            }
        }
    </style>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Handle department change to filter rooms and doctors
            const departmentSelect = document.getElementById('departmentSelect');
            const roomSelect = document.getElementById('roomSelect');
            const doctorSelect = document.getElementById('doctorSelect');

            function filterOptions() {
                const selectedDepartment = departmentSelect.value;
                
                // Filter rooms
                Array.from(roomSelect.options).forEach(option => {
                    if (option.value === '') return;
                    const roomDeptId = option.getAttribute('data-department');
                    option.style.display = !selectedDepartment || roomDeptId === selectedDepartment ? 'block' : 'none';
                });

                // Filter doctors
                Array.from(doctorSelect.options).forEach(option => {
                    if (option.value === '') return;
                    const doctorDeptId = option.getAttribute('data-department');
                    option.style.display = !selectedDepartment || doctorDeptId === selectedDepartment ? 'block' : 'none';
                });

                // Reset selections if they're not visible
                if (roomSelect.selectedOptions[0] && roomSelect.selectedOptions[0].style.display === 'none') {
                    roomSelect.value = '';
                }
                if (doctorSelect.selectedOptions[0] && doctorSelect.selectedOptions[0].style.display === 'none') {
                    doctorSelect.value = '';
                }
            }

            departmentSelect.addEventListener('change', filterOptions);
            filterOptions(); // Initialize

            // Quick week button
            document.getElementById('quickWeekBtn').addEventListener('click', function() {
                const now = new Date();
                const year = now.getFullYear();
                const week = getWeekOfYear(now);
                
                document.getElementById('yearSelect').value = year;
                document.getElementById('weekSelect').value = week;
                
                document.getElementById('filterForm').submit();
            });

            function getWeekOfYear(date) {
                const startOfYear = new Date(date.getFullYear(), 0, 1);
                const pastDaysOfYear = (date - startOfYear) / 86400000;
                return Math.ceil((pastDaysOfYear + startOfYear.getDay() + 1) / 7);
            }
        });

        function exportSchedule(format) {
            const form = document.getElementById('filterForm');
            const formData = new FormData(form);
            
            const params = new URLSearchParams();
            for (let [key, value] of formData.entries()) {
                if (value) params.append(key, value);
            }
            params.append('format', format);
            
            window.open(`/Manager/ExportSchedule?${params.toString()}`, '_blank');
        }
    </script>
}
